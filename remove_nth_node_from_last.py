# -*- coding: utf-8 -*-
"""remove_nth_node_from_last.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yhIQU_Zu4mkvZMNJgvWxxpgAMX6cyHhp
"""

class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:

    def remove_from_last(self, head, n):
        # Step 1: Find length of list
        temp = head
        count = 0
        while temp:
            count += 1
            temp = temp.next

        # If n equals length, remove head
        if n == count:
            return head.next

        # If n > count, invalid input
        if n > count:
            return head

        # Step 2: Find (count - n)th node
        temp = head
        for _ in range(count - n - 1):
            temp = temp.next

        # Step 3: Remove the node
        if temp.next:
            temp.next = temp.next.next

        return head

    def print(self, head):
        temp = head
        while temp:
            print(temp.data, end=" ")
            temp = temp.next
        print()

head=Node(1)
head.next=Node(2)
head.next.next=Node(3)
head.next.next.next=Node(4)
head.next.next.next.next=Node(5)
n=3
linked_list = LinkedList()
linked_list.print(head)
head = linked_list.remove_from_last(head, n)
linked_list.print(head)