# -*- coding: utf-8 -*-
"""stack_middle_element_remove.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10M6NBA46taya2H5Jb0ig_C96xYE9A1e9
"""

def delete_middle(stack, current, size):
    # Base case: when we reach the middle
    for i in range(len(stack)):
      if current == size // 2:
         stack.pop()
         return
      else:current += 1

    # Hold the top element
    temp = stack.pop()



    # Push the held element back
    stack.append(temp)

# Example usage
st = [1, 2, 3, 4, 5]  # 3 is the middle (0-based index)
delete_middle(st, 0, len(st))
print("Updated stack:", st)  # Output: [1, 2, 4, 5]

st2 = [10, 20, 30, 40]  # middle is 20 (2nd element)
delete_middle(st2, 0, len(st2))
print("Updated stack:", st2)  # Output: [10, 30, 40]